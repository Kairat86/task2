    В первом случае к первой группе относятся все возможные символы, но при этом остается минимальное количество символов для второй группы.
Во втором случае для первой группы выбирается наименьшее количество символов, так как, используется слабое совпадение.
    В третьем случае первой группе будет соответствовать вся строка, а для второй не остается ни одного символа, так как вторая группа использует слабое совпадение.
В четвертом случае строка не соответствует регулярному выражению, так как, для двух групп выбирается наименьшее количество символов.
    С помощью метода matches() класса Pattern можно проверять на соответствие шаблону целую строку, но если необходимо найти соответствия внутри строки, например, определять участки, которые соответствуют шаблону, то класс Pattern не может быть использован.
Для таких операций необходимо использовать класс Matcher.
    Начальное состояние объекта типа Matcher не определено. Попытка вызвать какой-либо метод класса для извлечения информации о найденном соответствии приведет к возникновению ошибки IllegalStateException.
Для того, чтобы начать работу с объектом Matcher, нужно вызвать один из его методов:
    boolean matches() — проверяет, соответствует ли вся информация шаблону;
    boolean lookingAt() — поиск последовательности символов, начинающейся с начала строки и соответствующей шаблону;
    boolean find() или boolean find(int start) — ищет последовательность символов, соответствующих шаблону, в любом месте строки. Параметр start указывает на начальную позицию поиска.
Иногда необходимо сбросить состояние экземпляра Matcher в исходное, для этого применяется метод reset() или reset(CharSequence input), который также устанавливает новую последовательность символов для поиска.
Для замены всех подпоследовательностей символов, удовлетворяющих шаблону, на заданную строку можно применить метод replaceAll(String replacement).
В регулярном выражении для более удобной обработки входной после до вательности применяются группы, которые помогают выделить части найденной подпоследовательности. В шаблоне они обозначаются скобками «(» и «)». Номера групп начинаются с единицы. Нулевая группа совпадает со всей найденной подпоследовательностью. Далее приведены методы для извлечения информации о группах. String group() — возвращает всю подпоследовательность, удовлетворяющую шаблону; int start() — возвращает индекс первого символа подпоследовательности, удовлетворяющей шаблону; int start(int group) — возвращает индекс первого символа указанной группы; int end() — возвращает индекс последнего символа подпоследовательности, удовлетворяющей шаблону; int end(int group) — возвращает индекс последнего символа указанной группы; String group(int group) — возвращает конкретную группу по позиции; boolean hitEnd() — возвращает истину, если был достигнут конец входной последовательности. Следующий пример показывает, как можно использовать возможности классов Pattern и Matcher для поиска, разбора и разбивки строк